
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    # Port exposed for direct access if needed
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - BACKEND_PORT=8000
      - DJANGO_SETTINGS_MODULE=backend.dev_settings
      - OLLAMA_BASE_URL=http://192.168.178.44:11434
      - OLLAMA_TIMEOUT=120
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - default

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    entrypoint: []
    command: celery -A backend worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=backend.dev_settings
      - OLLAMA_BASE_URL=http://192.168.178.44:11434
      - OLLAMA_TIMEOUT=120
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - default

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    # Port exposed for direct access if needed
    ports:
      - "5173:5173"
    depends_on:
      - backend
    environment:
      - FRONTEND_PORT=5173
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    networks:
      - default

networks:
  default :
    name: custom_network